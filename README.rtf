README
The Machine Learning Health Predictions:
Using multi-tiered application to train and visualize data


Contents
Introduction
System Requirements & Downloads
Documentation of the Machine Learning Health Predictions
Release Notes
Bug Reports and Feedback
Contents of the Application
Redistribution

Introduction
Thank you for downloading the codes for the graphic user interface that trains, tests, and predicts diabetes cases. The code is developed for the Java programming language.

System Requirements & Downloads
Reading from the database requires the downloading of the Weka API, which is available at https://www.cs.waikato.ac.nz/ml/weka/ . 
Modification of the DatabaseUtils.props file is needed to reflect your database connection. Instructions for this step is available at https://weka.wikispaces.com/Use+WEKA+in+your+Java+code .

Documentation of the Machine Learning Health Predictions
There are four packages: CheckThisFile, JTablePackage, WekaDBFilePackage, and addSample packages . 
CheckThisFile Package
The “CheckThisFile” package reads correct answers from a text file, and place these key values into an arraylist (ReadFile.java). The CompareTwoArrays.java class compares arrays from the ReadFile.java class against the test results taken from the Evaluate.java class (that is located in the WekaDBFilePackage package). In addition, the CompareTwoArrays.java class also calculates the accuracy of the evaluation. Tables displaying the results from using any of the three algorithms, SVM, Neural Network, and Decision Tree are contained in PrepareTableSVM, PrepareTableNN, and PrepareTableTree classes, respectively. 

JTablePackage Package
The “JTablePackage” package contains the DisplayJTable.java class that orchestrates the calling of logics from many other classes (Evaluate.java, MakeFile.java, Predict.java, Connect.java, and DisplayAddSample.java, CompareTwoArrays.java, and CheckThisFile.java classes). The main purpose of the DisplayJTable.java class is to render the graphic user interface using logics from the aforementioned classes. The TableQuery.java class eatable JDBC connection with the schema called “diabetes” in MySQL on port 3306 of localhost. Methods in this TableQuery.java class displays datasets that were used for training and testing, which are provided by the TableTrain.java TableTest.java classes, respectively.

WekaDBFilePackage Package
WekaDBFilePackage contains the main class, called Driver15.java. In addition, it also contains DatabaseQueries.java class that returns the fields of a sample (person being tested for diabetes) and getInstanceDataFromDatabase.java class that gets instances from the database. The UtilsWeka.java class creates instances from data written in .arff files.

The Evaluate.java class builds classifiers for each algorithm and returns the results as array lists. 

Because Weka is designed to use data written in .arff file format, the usage of data from a database in our case must be reformatted from database to .arff file format. This is achieved by taking instances from the database, then appending the header that is formatted to match .arff file format described by Weka. In our case the conversion of database instances to meet the .arff file format is written in the MakeFile.java class. 

An important function of machine learning is the ability to predict the outcome of data with unknown outcome; this is done in the Predict.java class. Prediction is made for the last sample added to be tested.

AddSample Package
AddSample package connects to the JDBC diabetes schema (Connect.java class) to allow the function of adding new samples to be tested. The user interface is created in DisplayAddSample.java class. The SampleForDiabetes.java class is the entity class containing fields and getters and setters for the sample. 

Documentation of the java code is provided within each class file. 

Release Notes
Please check the comment section on GitHub for release information.

Bug Reports and Feedback
Comments are welcomed to help improve this code. Please collaborate! 

Contents of the Application
This application contains:

Source Code: Four packages described above
	CheckThisFile package contains the following .java files: 
		CompareTwoArrays
		PrepareTableNN
		PrepareTableSVM
		PrepareTableTree
		ReadFile
 	JTablePackage contains the following .java files:  
		 DisplayJTable
		TableQuery
		TableTest
		TableTrain
	WekaDBFilePackage contains the following .java files:  
		DatabaseQueries
		Driver15
		Evaluate
		InstancesFromDatabase
		MakeFile
		Predict
		UtilsWeka
	AddSample package contains the following .java files: 
		Connect
		DisplayAddSample
		SampleForDiabetes
The .arff files that include:
	checkForAccuracy: contains answer key to be checked against the evaluated test results taken from the Evaluate.java class
	combined: file with all training data that were used
	combinedTest: file with all testing data that were used
	fromDatabase:file containing training data from the database after the header had been appended, which is processed in the MakeFile.java class
	fromDatabaseTest:file containing testing data from the database after the header had been appended, which is processed in the MakeFile.java class
	headerDiabetes: contains information on formatted data type and their variable names in java files and database schema	

Driver libraries 
 	Driver to MySQL 
	Driver to Weka 

Redistribution
Please distribute with citation: 
An, Vithia (2017). The Machine Learning Health Predictions (Version 1.0) [Source code]. http://github.com/anv2/GUI_test_train_predict_diabetes




